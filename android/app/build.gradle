// android/app/build.gradle

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
}

// Force-disable Gradle path check for long paths
project.ext.set("android.overridePathCheck", true)
System.setProperty("android.overridePathCheck", "true")

// Load keystore configuration if available
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.example.change_copy2"
    compileSdk 36
    ndkVersion "26.1.10909125"  // Use a recent NDK build

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.change_copy2"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 24
        targetSdkVersion 36
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
    }

    signingConfigs {
        release {
            if (keystoreProperties['keyAlias'] != null) {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            // Use the debug keystore for now to avoid signing blockers
            signingConfig signingConfigs.debug
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // 为了支持同时安装两个版本（稳定版 + 预览版），增加产品风味
    flavorDimensions "channel"
    productFlavors {
        stable {
            dimension "channel"
            // 稳定版使用原始包名，无后缀
            resValue "string", "app_name", "Change Copy"
        }
        preview {
            dimension "channel"
            applicationIdSuffix ".preview"
            versionNameSuffix "-preview"
            // 预览包名字体与图标可区分
            resValue "string", "app_name", "Change Copy Preview"
        }
    }
}

// Simplify output naming only (avoid overriding outputDirectory which breaks metadata generation for flavors)
android.applicationVariants.all { variant ->
    variant.outputs.all { output ->
        outputFileName = "app-${variant.name}.apk"
    }
}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:2.2.0"  // Align Kotlin runtime
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    // Flutter plugins will pull the remaining dependencies automatically
    implementation "com.github.bumptech.glide:glide:4.15.1"
    annotationProcessor "com.github.bumptech.glide:compiler:4.15.1"
    implementation "androidx.webkit:webkit:1.9.0"  // Enable WebView features
}

// Flutter Gradle plugin already declared in the plugins block

// Add mainland China mirror repositories for faster sync
allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://repo.huaweicloud.com/repository/maven/' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        google()
        mavenCentral()
    }
}

// Keep Kotlin stdlib pinned to avoid photo_manager mismatches
configurations.all {
    resolutionStrategy {
        force 'org.jetbrains.kotlin:kotlin-stdlib:2.2.0'
        force 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:2.2.0'
        force 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:2.2.0'
    }
}
